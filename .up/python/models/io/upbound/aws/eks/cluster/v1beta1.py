# generated by datamodel-codegen:
#   filename:  workdir/eks_aws_upbound_io_v1beta1_cluster.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class AccessConfigItem(BaseModel):
    authenticationMode: Optional[str] = None
    """
    The authentication mode for the cluster. Valid values are CONFIG_MAP, API or API_AND_CONFIG_MAP
    """
    bootstrapClusterCreatorAdminPermissions: Optional[bool] = None
    """
    Whether or not to bootstrap the access config values to the cluster. Default is true.
    """


class ProviderItem(BaseModel):
    keyArn: Optional[str] = None
    """
    ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide.
    """


class EncryptionConfigItem(BaseModel):
    provider: Optional[List[ProviderItem]] = None
    """
    Configuration block with provider for encryption. Detailed below.
    """
    resources: Optional[List[str]] = None
    """
    List of strings with resources to be encrypted. Valid values: secrets.
    """


class KubernetesNetworkConfigItem(BaseModel):
    ipFamily: Optional[str] = None
    """
    The IP family used to assign Kubernetes pod and service addresses. Valid values are ipv4 (default) and ipv6. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
    """
    serviceIpv4Cidr: Optional[str] = None
    """
    The CIDR block to assign Kubernetes pod and service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
    """


class ControlPlanePlacementItem(BaseModel):
    groupName: Optional[str] = None
    """
    The name of the placement group for the Kubernetes control plane instances. This setting can't be changed after cluster creation.
    """


class OutpostConfigItem(BaseModel):
    controlPlaneInstanceType: Optional[str] = None
    """
    The Amazon EC2 instance type that you want to use for your local Amazon EKS cluster on Outposts. The instance type that you specify is used for all Kubernetes control plane instances. The instance type can't be changed after cluster creation. Choose an instance type based on the number of nodes that your cluster will have. If your cluster will have:
    """
    controlPlanePlacement: Optional[List[ControlPlanePlacementItem]] = None
    """
    An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
    The control_plane_placement configuration block supports the following arguments:
    """
    outpostArns: Optional[List[str]] = None
    """
    The ARN of the Outpost that you want to use for your local Amazon EKS cluster on Outposts. This argument is a list of arns, but only a single Outpost ARN is supported currently.
    """


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class RoleArnRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class RoleArnSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class UpgradePolicyItem(BaseModel):
    supportType: Optional[str] = None
    """
    Support type to use for the cluster. If the cluster is set to EXTENDED, it will enter extended support at the end of standard support. If the cluster is set to STANDARD, it will be automatically upgraded at the end of standard support. Valid values are EXTENDED, STANDARD
    """


class SecurityGroupIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class SecurityGroupIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class SubnetIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class SubnetIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class VpcConfigItem(BaseModel):
    endpointPrivateAccess: Optional[bool] = None
    """
    Whether the Amazon EKS private API server endpoint is enabled. Default is false.
    """
    endpointPublicAccess: Optional[bool] = None
    """
    Whether the Amazon EKS public API server endpoint is enabled. Default is true.
    """
    index: Optional[str] = '0'
    """
    This is an injected field with a default value for being able to merge items of the parent object list.
    """
    publicAccessCidrs: Optional[List[str]] = None
    """
    List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with 0.0.0.0/0.
    """
    securityGroupIdRefs: Optional[List[SecurityGroupIdRef]] = None
    """
    References to SecurityGroup in ec2 to populate securityGroupIds.
    """
    securityGroupIdSelector: Optional[SecurityGroupIdSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.
    """
    securityGroupIds: Optional[List[str]] = None
    """
    account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
    """
    subnetIdRefs: Optional[List[SubnetIdRef]] = None
    """
    References to Subnet in ec2 to populate subnetIds.
    """
    subnetIdSelector: Optional[SubnetIdSelector] = None
    """
    Selector for a list of Subnet in ec2 to populate subnetIds.
    """
    subnetIds: Optional[List[str]] = None
    """
    account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
    """


class ZonalShiftConfigItem(BaseModel):
    enabled: Optional[bool] = None
    """
    Whether zonal shift is enabled for the cluster.
    """


class ForProvider(BaseModel):
    accessConfig: Optional[List[AccessConfigItem]] = None
    """
    Configuration block for the access config associated with your cluster, see Amazon EKS Access Entries.
    """
    bootstrapSelfManagedAddons: Optional[bool] = None
    """
    Install default unmanaged add-ons, such as aws-cni, kube-proxy, and CoreDNS during cluster creation. If false, you must manually install desired add-ons. Changing this value will force a new cluster to be created. Defaults to true.
    """
    enabledClusterLogTypes: Optional[List[str]] = None
    """
    List of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging.
    """
    encryptionConfig: Optional[List[EncryptionConfigItem]] = None
    """
    Configuration block with encryption configuration for the cluster. Only available on Kubernetes 1.13 and above clusters created after March 6, 2020. Detailed below.
    """
    kubernetesNetworkConfig: Optional[List[KubernetesNetworkConfigItem]] = None
    """
    Configuration block with kubernetes network configuration for the cluster. Detailed below.
    """
    outpostConfig: Optional[List[OutpostConfigItem]] = None
    """
    Configuration block representing the configuration of your local Amazon EKS cluster on an AWS Outpost. This block isn't available for creating Amazon EKS clusters on the AWS cloud.
    """
    region: str
    """
    Region is the region you'd like your resource to be created in.
    """
    roleArn: Optional[str] = None
    """
    ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. Ensure the resource configuration includes explicit dependencies on the IAM Role permissions by adding depends_on if using the aws_iam_role_policy resource or aws_iam_role_policy_attachment resource, otherwise EKS cannot delete EKS managed EC2 infrastructure such as Security Groups on EKS Cluster deletion.
    """
    roleArnRef: Optional[RoleArnRef] = None
    """
    Reference to a Role in iam to populate roleArn.
    """
    roleArnSelector: Optional[RoleArnSelector] = None
    """
    Selector for a Role in iam to populate roleArn.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    upgradePolicy: Optional[List[UpgradePolicyItem]] = None
    """
    Configuration block for the support policy to use for the cluster.  See upgrade_policy for details.
    """
    version: Optional[str] = None
    """
    –  Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
    """
    vpcConfig: Optional[List[VpcConfigItem]] = None
    """
    Configuration block for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see Cluster VPC Considerations and Cluster Security Group Considerations in the Amazon EKS User Guide. Detailed below. Also contains attributes detailed in the Attributes section.
    """
    zonalShiftConfig: Optional[List[ZonalShiftConfigItem]] = None
    """
    Configuration block with zonal shift configuration for the cluster. Detailed below.
    """


class InitProvider(BaseModel):
    accessConfig: Optional[List[AccessConfigItem]] = None
    """
    Configuration block for the access config associated with your cluster, see Amazon EKS Access Entries.
    """
    bootstrapSelfManagedAddons: Optional[bool] = None
    """
    Install default unmanaged add-ons, such as aws-cni, kube-proxy, and CoreDNS during cluster creation. If false, you must manually install desired add-ons. Changing this value will force a new cluster to be created. Defaults to true.
    """
    enabledClusterLogTypes: Optional[List[str]] = None
    """
    List of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging.
    """
    encryptionConfig: Optional[List[EncryptionConfigItem]] = None
    """
    Configuration block with encryption configuration for the cluster. Only available on Kubernetes 1.13 and above clusters created after March 6, 2020. Detailed below.
    """
    kubernetesNetworkConfig: Optional[List[KubernetesNetworkConfigItem]] = None
    """
    Configuration block with kubernetes network configuration for the cluster. Detailed below.
    """
    outpostConfig: Optional[List[OutpostConfigItem]] = None
    """
    Configuration block representing the configuration of your local Amazon EKS cluster on an AWS Outpost. This block isn't available for creating Amazon EKS clusters on the AWS cloud.
    """
    roleArn: Optional[str] = None
    """
    ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. Ensure the resource configuration includes explicit dependencies on the IAM Role permissions by adding depends_on if using the aws_iam_role_policy resource or aws_iam_role_policy_attachment resource, otherwise EKS cannot delete EKS managed EC2 infrastructure such as Security Groups on EKS Cluster deletion.
    """
    roleArnRef: Optional[RoleArnRef] = None
    """
    Reference to a Role in iam to populate roleArn.
    """
    roleArnSelector: Optional[RoleArnSelector] = None
    """
    Selector for a Role in iam to populate roleArn.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    upgradePolicy: Optional[List[UpgradePolicyItem]] = None
    """
    Configuration block for the support policy to use for the cluster.  See upgrade_policy for details.
    """
    version: Optional[str] = None
    """
    –  Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
    """
    vpcConfig: Optional[List[VpcConfigItem]] = None
    """
    Configuration block for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see Cluster VPC Considerations and Cluster Security Group Considerations in the Amazon EKS User Guide. Detailed below. Also contains attributes detailed in the Attributes section.
    """
    zonalShiftConfig: Optional[List[ZonalShiftConfigItem]] = None
    """
    Configuration block with zonal shift configuration for the cluster. Detailed below.
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class CertificateAuthorityItem(BaseModel):
    data: Optional[str] = None
    """
    Base64 encoded certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
    """


class OidcItem(BaseModel):
    issuer: Optional[str] = None
    """
    Issuer URL for the OpenID Connect identity provider.
    """


class IdentityItem(BaseModel):
    oidc: Optional[List[OidcItem]] = None
    """
    Nested block containing OpenID Connect identity provider information for the cluster. Detailed below.
    """


class KubernetesNetworkConfigItemModel(BaseModel):
    ipFamily: Optional[str] = None
    """
    The IP family used to assign Kubernetes pod and service addresses. Valid values are ipv4 (default) and ipv6. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
    """
    serviceIpv4Cidr: Optional[str] = None
    """
    The CIDR block to assign Kubernetes pod and service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
    """
    serviceIpv6Cidr: Optional[str] = None
    """
    The CIDR block that Kubernetes pod and service IP addresses are assigned from if you specified ipv6 for ipFamily when you created the cluster. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster.
    """


class VpcConfigItemModel(BaseModel):
    clusterSecurityGroupId: Optional[str] = None
    """
    Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.
    """
    endpointPrivateAccess: Optional[bool] = None
    """
    Whether the Amazon EKS private API server endpoint is enabled. Default is false.
    """
    endpointPublicAccess: Optional[bool] = None
    """
    Whether the Amazon EKS public API server endpoint is enabled. Default is true.
    """
    index: Optional[str] = '0'
    """
    This is an injected field with a default value for being able to merge items of the parent object list.
    """
    publicAccessCidrs: Optional[List[str]] = None
    """
    List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with 0.0.0.0/0.
    """
    securityGroupIds: Optional[List[str]] = None
    """
    account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
    """
    subnetIds: Optional[List[str]] = None
    """
    account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
    """
    vpcId: Optional[str] = None
    """
    ID of the VPC associated with your cluster.
    """


class AtProvider(BaseModel):
    accessConfig: Optional[List[AccessConfigItem]] = None
    """
    Configuration block for the access config associated with your cluster, see Amazon EKS Access Entries.
    """
    arn: Optional[str] = None
    """
    ARN of the cluster.
    """
    bootstrapSelfManagedAddons: Optional[bool] = None
    """
    Install default unmanaged add-ons, such as aws-cni, kube-proxy, and CoreDNS during cluster creation. If false, you must manually install desired add-ons. Changing this value will force a new cluster to be created. Defaults to true.
    """
    certificateAuthority: Optional[List[CertificateAuthorityItem]] = None
    """
    Attribute block containing certificate-authority-data for your cluster. Detailed below.
    """
    clusterId: Optional[str] = None
    """
    The ID of your local Amazon EKS cluster on the AWS Outpost. This attribute isn't available for an AWS EKS cluster on AWS cloud.
    """
    createdAt: Optional[str] = None
    """
    Unix epoch timestamp in seconds for when the cluster was created.
    """
    enabledClusterLogTypes: Optional[List[str]] = None
    """
    List of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging.
    """
    encryptionConfig: Optional[List[EncryptionConfigItem]] = None
    """
    Configuration block with encryption configuration for the cluster. Only available on Kubernetes 1.13 and above clusters created after March 6, 2020. Detailed below.
    """
    endpoint: Optional[str] = None
    """
    Endpoint for your Kubernetes API server.
    """
    id: Optional[str] = None
    """
    Name of the cluster.
    """
    identity: Optional[List[IdentityItem]] = None
    """
    Attribute block containing identity provider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019. Detailed below.
    """
    kubernetesNetworkConfig: Optional[List[KubernetesNetworkConfigItemModel]] = None
    """
    Configuration block with kubernetes network configuration for the cluster. Detailed below.
    """
    outpostConfig: Optional[List[OutpostConfigItem]] = None
    """
    Configuration block representing the configuration of your local Amazon EKS cluster on an AWS Outpost. This block isn't available for creating Amazon EKS clusters on the AWS cloud.
    """
    platformVersion: Optional[str] = None
    """
    Platform version for the cluster.
    """
    roleArn: Optional[str] = None
    """
    ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. Ensure the resource configuration includes explicit dependencies on the IAM Role permissions by adding depends_on if using the aws_iam_role_policy resource or aws_iam_role_policy_attachment resource, otherwise EKS cannot delete EKS managed EC2 infrastructure such as Security Groups on EKS Cluster deletion.
    """
    status: Optional[str] = None
    """
    Status of the EKS cluster. One of CREATING, ACTIVE, DELETING, FAILED.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    upgradePolicy: Optional[List[UpgradePolicyItem]] = None
    """
    Configuration block for the support policy to use for the cluster.  See upgrade_policy for details.
    """
    version: Optional[str] = None
    """
    –  Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
    """
    vpcConfig: Optional[List[VpcConfigItemModel]] = None
    """
    Configuration block for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see Cluster VPC Considerations and Cluster Security Group Considerations in the Amazon EKS User Guide. Detailed below. Also contains attributes detailed in the Attributes section.
    """
    zonalShiftConfig: Optional[List[ZonalShiftConfigItem]] = None
    """
    Configuration block with zonal shift configuration for the cluster. Detailed below.
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class Cluster(BaseModel):
    apiVersion: Optional[str] = 'eks.aws.upbound.io/v1beta1'
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = 'Cluster'
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    ClusterSpec defines the desired state of Cluster
    """
    status: Optional[Status] = None
    """
    ClusterStatus defines the observed state of Cluster.
    """


class ClusterList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[Cluster]
    """
    List of clusters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """